set(C_GEN_CODE_FOLDER "mpc_generated_code")
set(BUILD_C_GENERATED_CODE "${CMAKE_CURRENT_BINARY_DIR}/${C_GEN_CODE_FOLDER}")

if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${C_GEN_CODE_FOLDER}")
  # Copy to build directory
  file(COPY "${CMAKE_CURRENT_SOURCE_DIR}/${C_GEN_CODE_FOLDER}"
    DESTINATION "${BUILD_C_GENERATED_CODE}")
  
else()
  # Generate c code in build directory
  set(ENV{PYTHONPATH} "${CMAKE_CURRENT_SOURCE_DIR}:$ENV{PYTHONPATH}")
  execute_process(
    COMMAND python3 ${CMAKE_CURRENT_SOURCE_DIR}/mpc/export_c_code.py -d ${BUILD_C_GENERATED_CODE}
    WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
    RESULT_VARIABLE result
  )
  
  if(result)
    message(FATAL_ERROR "Failed to generate c code")
  endif()
endif()

set(ACADOS_C_GENERATED_CODE_INCLUDE_DIRS
  ${BUILD_C_GENERATED_CODE}
  ${BUILD_C_GENERATED_CODE}/
  ${BUILD_C_GENERATED_CODE}/${C_GEN_CODE_FOLDER}
)
set(ACADOS_C_GENERATED_CODE_LIB
  ${BUILD_C_GENERATED_CODE}/mpc_generated_code/libacados_ocp_solver_mpc.so
  ${BUILD_C_GENERATED_CODE}/mpc_generated_code/libacados_sim_solver_mpc.so
)

# Include c code generated by acados
include_directories(
	${ACADOS_C_GENERATED_CODE_INCLUDE_DIRS}
)
